:root {
    --black: #121118;
    --dark: #34655D;
    --med: #343434;
    --light: #B4DEE2;
    --white: #FDF9F5;
    --cube-size: min(70vw, 50vh);
    --background: #B4DEE2;
    --opacity: 100%;
    cursor: grab;
}

/* :root:has(#clear:checked) {
    --opacity: 50%;
    --background: transparent;
} */

:root:active {
    cursor: grabbing;
}

body {
    position: relative;
    margin: 0;
    background: var(--light);
    width: 100vw;
    height: 100vh;
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    align-items: center;
}

.dark-mode {
    background-color: var(--black);
}

.scene {
    margin: 100px;
    width: var(--cube-size);
    aspect-ratio: 1;
    perspective: 600px;
}

.cube {
    width: 100%;
    aspect-ratio: 1;
    position: relative;
    transform-style: preserve-3d;
    transform: translateZ(calc(var(--cube-size) / -2));
    transition: 1s;
}

.face {
    position: absolute;
    width: var(--cube-size);
    aspect-ratio: 1;
    background-color: var(--black);
    border-radius: 15px;
    padding: 1px;

    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr;
}

.dark-mode .face {
    background-color: var(--med);
}

.sticker {
    border: 3px solid var(--white);
    border-radius: 10px;
    margin: 5px;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: 0.4s;
    opacity: var(--opacity);
    backface-visibility: hidden;
}

.dark-mode .sticker {
    border-color: var(--black);
}

#settings {
    width: min(100%, var(--cube-size));
    margin-top: calc(var(--cube-size) * 0.25);
    background-color: var(--dark);
    border-radius: 20px;
    padding: 20px;
    cursor: default;
}

input,
button {
    cursor: pointer;
}

.clear .sticker {
    opacity: 50%;
}

.clear .face {
    background-color: transparent;
    border: none;
}

.sticker:hover {
    opacity: 70%;
}

.sticker:active {
    margin: 10%;
}

#front { transform: rotateY(0deg) translateZ(calc(var(--cube-size) / 2)); }
#back { transform: rotateY(180deg) rotateZ(180deg) translateZ(calc(var(--cube-size) / 2)); }
#top { transform: rotateX(90deg) translateZ(calc(var(--cube-size) / 2)); }
#bottom { transform: rotateX(-90deg) translateZ(calc(var(--cube-size) / 2)); }
#left { transform: rotateY(-90deg) translateZ(calc(var(--cube-size) / 2)); }
#right { transform: rotateY(90deg) translateZ(calc(var(--cube-size) / 2)); }

.green { background-color: #009B48; }
.red { background-color: #B90000; }
.blue { background-color: #0045AD; }
.orange { background-color: #FF5900; }
.white { background-color: #FFFFFF; }
.yellow { background-color: #FFD500; }
.none { background-color: transparent; }

@media screen and (max-width: 800px) {

    html, 
    body {
        overflow-x: hidden;
    }
}