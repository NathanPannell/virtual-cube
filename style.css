:root {
    --dark: #1f4e46;
    --light: #B4DEE2;
    --cube-size: min(60vw, 50vh);
    cursor: grab;
    --sharp-corner: 7%;
    --round-corner: 25%;
}
:root:active {
    cursor: grabbing;
}

html,
body {
    width: 100vw;
    height: 100vh;
    margin: 0;
}
body {
    background: var(--light);

    /* Stacking elements vertically for now
        Mobile First! */
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    align-items: center;
}

.scene {
    margin: 100px;
    width: var(--cube-size);
    aspect-ratio: 1;
    perspective: 600px;
}

.cube {
    width: 100%;
    aspect-ratio: 1;
    position: relative;
    transform-style: preserve-3d;
    transform: translateZ(calc(var(--cube-size) / -2));
    transition: 1s;
}

.face {
    position: absolute;
    width: var(--cube-size);
    aspect-ratio: 1;
    background-color: black;
    border-radius: calc(var(--sharp-corner) / 3 + 6px);
    padding: 1px;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
}

.sticker {
    border: 3px solid black;
    border-radius: var(--sharp-corner);
    display: flex;
    justify-content: center;
    align-items: center;
    backface-visibility: hidden;
}

.sticker:nth-child(2) {
    border-radius: var(--sharp-corner) var(--sharp-corner) var(--round-corner) var(--round-corner);
}.sticker:nth-child(4) {
    border-radius: var(--sharp-corner) var(--round-corner) var(--round-corner) var(--sharp-corner);
}.sticker:nth-child(5) {
    border-radius: var(--round-corner);
}
.sticker:nth-child(6) {
    border-radius: var(--round-corner) var(--sharp-corner) var(--sharp-corner) var(--round-corner);
}.sticker:nth-child(8) {
    border-radius: var(--round-corner) var(--round-corner) var(--sharp-corner) var(--sharp-corner);
}

/* Setting module (change theme, etc.) */
#settings {
    width: min(100%, var(--cube-size));
    /* margin-top: calc(var(--cube-size) * 0.25); */
    background-color: white;
    border: 5px solid black;
    border-radius: 20px;
    padding: 20px;
    cursor: default;
}
input,
button {
    cursor: pointer;
}

/* Change appearence of the cube for the dark theme */

.dark-mode.body {
    background-color: var(--dark);
}

/* Change appearance of the cube for the transparent theme */
.clear .sticker {
    opacity: 75%;
    border-color: transparent;
    margin: 3px;
}
.clear .face {
    background-color: transparent;
}

/* Responsiveness for stickers */
.sticker:hover,
.sticker:active {
    opacity: 50%;
}

/* Positions the faces of the cube in 3D */
#front { transform: rotateY(0deg) translateZ(calc(var(--cube-size) / 2)); }
#back { transform: rotateY(180deg) rotateZ(180deg) translateZ(calc(var(--cube-size) / 2)); }
#top { transform: rotateX(90deg) translateZ(calc(var(--cube-size) / 2)); }
#bottom { transform: rotateX(-90deg) translateZ(calc(var(--cube-size) / 2)); }
#left { transform: rotateY(-90deg) translateZ(calc(var(--cube-size) / 2)); }
#right { transform: rotateY(90deg) translateZ(calc(var(--cube-size) / 2)); }

/* Utility classes for sticker colors */
.green { background-color: #009B48; }
.red { background-color: #B90000; }
.blue { background-color: #0045AD; }
.orange { background-color: #FF5900; }
.white { background-color: #FFFFFF; }
.yellow { background-color: #FFD500; }
.none { background-color: transparent; }

/* Prevents screen from growing outside of screen size.
    Should prevent scrolling on mobile.
    TODO: Check out options to prevent scrolling on iOS */
@media screen and (max-width: 800px) {
    html, 
    body {
        overflow: hidden;
    }
}